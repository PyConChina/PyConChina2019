####################################################################
# 上海
####################################################################

speaker_shanghai_arminronacher:
  name: Armin Ronacher
  name_en: Armin Ronacher
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Armin Ronacher 是 Flask、Werkzeug、Jinja2、Click 等流行开源项目的作者。他关注于设计良好的系统和 API。目前开发一款名为 Sentry 的开源错误报告工具。"
  short_intro_en: "Armin Ronacher 是 Flask、Werkzeug、Jinja2、Click 等流行开源项目的作者。他关注于设计良好的系统和 API。目前开发一款名为 Sentry 的开源错误报告工具。"
  intro: "Armin Ronacher is the creator of the Flask, Jinja2, Werkzeug, Click, etc. He cares about well designed systems and APIs. He is currently working on Sentry, an Open Source crash reporting tool."
  intro_en: "Armin Ronacher is the creator of the Flask, Jinja2, Werkzeug, Click, etc. He cares about well designed systems and APIs. He is currently working on Sentry, an Open Source crash reporting tool."
  shanghai_topic:
    title: "待定"
    title_en: ""
    preview: ""
    preview_en: ""
    slide: #
speaker_shanghai_hsiaomingyang:
  name: Hsiaoming Yang
  name_en: Hsiaoming Yang
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Hsiaoming Yang 是 Authlib 和 Typlog 的作者，Flask 等项目的维护者，Hsiaoming Ltd 创始人。"
  short_intro_en: "Founder of Hsiaoming Ltd. Maintainer of Flask. Running Authlib and Typlog."
  intro: "Hsiaoming Yang 是 Authlib 和 Typlog 的作者，Flask 等项目的维护者，Hsiaoming Ltd 创始人。"
  intro_en: "Founder of Hsiaoming Ltd. Maintainer of Flask. Running Authlib and Typlog."
  shanghai_topic:
    title: "The dangerous Flask"
    title_en: "The dangerous Flask"
    preview: "A talk about security in Flask (itsdangerous, JWT, JWS)"
    preview_en: "A talk about security in Flask (itsdangerous, JWT, JWS)"
    slide: #
speaker_shanghai_huili:
  name: 李辉 
  name_en: Hui Li
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "独立 Web 开发者，Flask 维护者，《Flask Web 开发实战》作者"
  short_intro_en: "Individual developer, maintainer of Flask, author of Flask Web Development"
  intro: "独立 Web 开发者，Flask 维护者，《Flask Web 开发实战》作者"
  intro_en: "Individual developer, maintainer of Flask, author of Flask Web Development"
  shanghai_topic:
    title: "基于 Flask 的 REST API 开发指南"
    title_en: "Development of Flask base on REST API"
    preview: "作为一个微框架，轻量灵活的 Flask 很适合用来开发 REST API 服务。相对于 Django REST Framework 和 APIStar，Flask 有什么优势和缺点？为了减少工作量，我们通常会使用一些工具来辅助编写，面对 Flask-RESTful、Flask-RESTPlus、Flask-API、Webargs、Marshmallow 等扩展和工具库，我们应该如何选择？虽然我们经常使用 REST API 这个名称，但是大部分的 API 都不够 RESTful，那么什么样的 API 才能算是 REST API？在这个议题中，我们将对这几个问题逐一进行探讨，并了解如何使用 Flask 编写出功能完善的 REST API 服务。"
    preview_en: "As a micro framework, Flask is very suitable for developing REST API. What is the merits and drawback of Flask comparing to  Django REST Framework and APIStar? In order to simplify our work, we will use some tools to help us. What should we choose between several tools and extension like Flask-RESTful、Flask-RESTPlus、Flask-API、Webargs、Marshmallow? Although we usually use REST API to name our API, most of them are not \"RESTful\" enough. Therefore, which kind of API is the truly REST API? In this topic speech, we will discuss these questions and introduce how to write a fully functional REST API using Flask."
    slide: #
speaker_shanghai_hengcui:
  name: 崔衡 
  name_en: Heng Cui
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "阿里巴巴 - 技术专家"
  short_intro_en: "阿里巴巴 - 技术专家"
  intro: "中国科学技术大学硕士毕业，有10余年的IT开发和从业经验，历任Citrix高级开发工程师、创业公司CTO、阿里巴巴技术专家等，有多年的Python开发经验，使用Python构建过自动化系统、网站、基于自然语言处理的聊天机器人。"
  intro_en: "Master of USTC, have more than 10 years IT development and related experiences, used to work as Senior Engineer of Citrix, CTO of a startup company, now a technology expert of Alibaba. Over the passing years, I’ve been using python for building automation system、website and NLP based chatbot"
  shanghai_topic:
    title: "Another Python and Rust Love Story"
    title_en: "Another Python and Rust Love Story"
    preview: "阿里云为了缓解日益拥堵的城市交通问题，提出了基于数据治理的ET城市大脑。我们项目组的研究方向为分布式、低延迟的城市级别的全域交通仿真平台，主要是实时完成城市级别的计算，由于整个系统是一个高性能计算的场景，我们选取rust语言作为底层的实现，对于上层的应用，选用Python作为开发语言，通过rust binding, 我们实现算法的分布式部署和调用。"
    preview_en: "In order to alleviate the increasingly congested urban traffic problems, Alibaba cloud has proposed Et-Brain solution basing on data. Our team’s project is to build a distributed、low latency traffic simulation system of the whole city. As the system required all the calculation to be finished in real-time, we chose rust as the low-level implementation. For the high-level application, we use python. We’ve succeed in building a distributed system, which has a lot of python based application running on it using rust-bindings."
    slide: #
speaker_shanghai_jiahualu:
  name: 陆佳华 
  name_en: Jiahua Lu
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Xilinx - 研究院 学术与创新生态高级经理"
  short_intro_en: "Senior Manager of Xilinx Academic and Innovative Ecology institude"
  intro: "陆佳华先生于2006年加入Xilinx公司，现任Xilinx研究院 学术与创新生态高级经理，领导Xilinx公司在亚太区的开源创新工作其包括开源社区，前沿技术初创孵化，学术合作等工作。陆佳华先生撰写了全球第一本NetFPGA使用指南，以及第一本Zynq开发者实战指南。陆佳华同时还兼任中国计算机学会体系结构专委会常务委员，信息技术新工科产学研联盟-可定制计算人才培养工作委员会 秘书长等社会职务"
  intro_en: "Mr. Lu joins in Xilinx in the year 2006. Now he is the senior manager of Xilinx Academic and Innovative Ecology institute, leading Xilinx's open-source innovation work in the Asia Pacific region, including the open-source community, cutting-edge technology startup incubation, academic collaboration, etc. Mr. Lu wrote the world's first using guide of NetFPGA and developer's guide of Zynq. He is also a standing committee of CCF TCARC and secretary-general of Information Technology New Engineering, Industry, Education and Research Alliance - Customizable Computing Talent Training Committee."
  shanghai_topic:
    title: "当Python遇上FPGA – Pynq开源项目的实践与体会"
    title_en: "When Python meet FPGA -- the experience and feeling of Pynq opensource project"
    preview: "Pynq项目是Xilinx研究院发起的将丰富的Python生态与FPGA硬件编程结合的开源框架。这是全球第一次尝试将面向生产力的Python语言和面向应用加速的可定制计算架构（Domain Specific Architecture）结合。软件开发者通过Python编程就可以将FPGA并行计算和可灵活配置的特性应用于端设备，适用于加速广泛的应用。而硬件开发者（芯片设计）通过Pynq框架可以快速获得Python支持加速其数据分析，展示等。目前在PYNQ开源社区中已经提供了上百个硬件加速Overlay，其中包括人工智能推理、机器视觉、视频转码、数据压缩，工业物联网等。报告中并将介绍利用该框架进行ROS， Ray，OpenCV等开源框架的实践，并分析Python语言对FPGA进行编程应用开发时对FPGA器件的影响，性能结果等，并介绍项目后续开发的线路图。"
    preview_en: "Pynq project is an open-source project which starts by Xilinx institute in order to mix Python ecosystem and FPGA hardware programming.  This is the world's first try to mix Python and Domain Specific Architecture. Software developers can apply FPGA parallel computing and flexible configuration features to end devices through Python programming, which is suitable for accelerating a wide range of applications. And hardware developers (chip design) can quickly get Python support through the Pynq framework to accelerate their data analysis, display, etc. Hundreds of hardware-accelerated Overlays have been provided in the PYNQ open source community, including artificial intelligence reasoning, machine vision, video transcoding, data compression, industrial Internet of Things, etc. The report will introduce the practice of using the framework for open source frameworks such as ROS, Ray, OpenCV, and analyze the impact of Python language on FPGA devices during programming application development, performance results, etc., And introduce the road map for subsequent development of the project."
    slide: #
speaker_shanghai_laiqiangding:
  name: 丁来强 
  name_en: Laiqiang Ding
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "阿里云日志服务上海负责人"
  short_intro_en: "Leader of Ali cloud service in Shanghai"
  intro: "从业超过10年，长期任职于大数据平台DevSecOps、AIOps的构建相关领域，曾任大数据公司顶级公司Splunk高级架构师等。乐于分享，在历届PyCon、云栖等分享过十几场演讲或直播，覆盖大数据分析处理、调度监测、可视化分析与Python核心系列等十多个不同议题系列，观众赞誉极高。"
  intro_en: "More than 10 years of work experience in DevSecOps、AIOps and so on. Former Splunk Senior Architect in a top company in big data. Willing to share, make more than a dozen of speech or live in PyCon and Yunqi. Topic including several fields like Big Data Analysis Processing, Scheduling Monitoring, Visual Analysis, and Python Core Series. These speeches gain warmly welcome by the listeners."
  shanghai_topic:
    title: "开源AIOps数据中台搭建与Python的作用"
    title_en: "Building of open source AIOps data center and the role of Python"
    preview: "根据Gartner的报告，AIOps将在未来5-10年落地开花，并集中统一各种Ops平台（Dev、IT、Net、Sec），本议题介绍AIOps的核心作用、相关工程难点（数据采集、数据中台、智能算法、自动化等）与开源方案选择，并介绍Python在其中的主要作用，覆盖开源方案有：Kafka、ELK、K8S、Prometheus、Grafana、Graphite、Ansible、Airflow、Flink、TensorFlow、OpenTelemetry等"
    preview_en: "According to the report by Gartner, AIOps will be widely used soon ( about 5 to 10 years), and it will use several Ops platform like （Dev、IT、Net、Sec）. In this speech, I'll introduce you about the core features of AIOps, difficult point of it  (Data acquisition, data center, intelligent algorithm, automation... ) How to select an open-source program of your project and introduce the importance of Python in it. This speech will including open-source program Kafka、ELK、K8S、Prometheus、Grafana、Graphite、Ansible、Airflow、Flink、TensorFlow、OpenTelemetry etc."
    slide: #
speaker_shanghai_huili:
  name: 李辉
  name_en: Hui Li
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "独立 Web 开发者，Flask 维护者，《Flask Web 开发实战》作者"
  short_intro_en: "Individual developer, maintainer of Flask, author of Flask Web Development"
  intro: ""
  intro_en: ""
  shanghai_topic:
    title: "Python 虚拟环境和依赖管理工具大乱斗"
    title_en: "Fighting among Python virtual environment and dependency management tools"
    preview: "大多数人都会在 Python 虚拟环境和依赖管理的路上经历重重困难。一开始，你使用 pip + virtualenv + requirements.txt 的工具组合，或者再加上 virtualenvwrapper；接着，更高级的新东西出现了。Pipenv 号称新一代 Python 项目环境和依赖管理工具，打算替代上面的复杂组合，但是发展并不顺利；接着，竞争者出现了，其中实力最强的 Poetry 除了可以替代 Pipenv 来管理依赖之外，甚至还可以让你不用写 setup.py。故事就这样结束了吗？当然没有，尚在草案阶段的 PEP 582 在一边虎视眈眈，试图终结这一切混乱……"
    preview_en: "Most of us will face multiple difficulties in Python virtual environment and dependency. At first, you may use virtualenv + requirements.txt and probably with virtualenvwrapper; Then, more new things appear. Pipenv claims itself as a new generation of Python project environment and dependency management tools. It wants to replace those things mentioned above, but it seems that it doesn't do well. After that, more competitors come out. Poetry is the best one between them, it is able to manage dependency as Pipenv. What is more, it can even let you not to write setup.py. Is this the end of the story? Of course not, PEP 582, which still in draft stage, is on the sidelines, trying to end all this chaos."
    slide: #
speaker_shanghai_zhaoqiangchen:
  name: 陈照强
  name_en: Zhaoqiang Chen
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "中科院上海药物所高级研究院 高级研究员. "
  short_intro_en: "Shanghai Institute of Advanced Drugs, Chinese Academy of Sciences Senior researcher. "
  intro: "开发药物研发相关软件D3Pockets; 利用sphinx制作网站：http://pymol.chenzhaoqiang.com/"
  intro_en: "He developes D3Pockets which is a software related to medicine reserch; Using sphinx making website http://pymol.chenzhaoqiang.com/"
  shanghai_topic:
    title: "Sphinx制作WEB文档"
    title_en: "Using spinx to make WEB document"
    preview: "Sphinx 是一种工具，它允许开发人员以纯文本格式编写文档，可以输出各种文档，如PDF, HTML等。Sphinx 是用 Python 编写的，并且最初是为 Python 语言文档而创建，多个项目都是用sphinx工具制作的文档，如：matplotlib, scrapy, 等。默认情况下，Sphinx 会为 Python 突出显示代码，但它还允许定义其他编程语言，比如 C 和 Ruby。和MarkDown 相比，它复杂一点，但灵活度更高，制作的文档更加精美，支持自定义语法。在我看来，markdown 好比一张纸，而sphinx好比一本书。如果你觉得你要记录的东西很多，不妨试试sphinx。"
    preview_en: "Sphinx is a tool which allows developers to write their document in plain text and output several formats like PDF, HTML, etc. Sphinx is written in Python and its original design aim is to help to make Python document. And many projects are using sphinx to write their document, for example, matplotlib, scrapy... Sphinx will high light Python codes in default, but it still supports other programming languages like C and Ruby. Comparing to MarkDown, it is a bit more complicated but with higher flexibility and can make a more beautiful document. It also supports customize grammar. In my point of view, markdown is a piece of paper and sphinx is a book. If you want to record many things, why not try to use sphinx?"
    slide: #
speaker_shanghai_xiaotan:
  name: 谭啸
  name_en: Xiao Tan
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "蚂蚁金服开发工程师"
  short_intro_en: "Developer of Ant Fincial Inc."
  intro: ""
  intro_en: ""
  shanghai_topic:
    title: "500行Python写一个渲染器 "
    title_en: "Make a renderer within 500 lines Python codes"
    preview: "图形学是很有意思的一门学科，用简洁优雅的Python来实现图形学算法，更是一件充满了情怀和乐趣的事。在这个主题中我将分享用 Python 实现一个简单的软件渲染器的过程中遇到的一些有意思的事情。"
    preview_en: "Graphics is an interesting subject, so using elegant Python code to implement algorithm is also a lovely diversion. In this speech, I'll share some funny things in the process of using Python to implement a simple software renderer"
    slide: #
speaker_shanghai_congweisong:
  name: 宋丛威
  name_en: William Song
  city_shanghai: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "浙江工业大学之江学院"
  short_intro_en: "Zhijiang College of zjut"
  intro: "讲师，浙大数学系理学博士. 目前关注机器学习，我的梦想是强人工智能"
  intro_en: "Assistant, PhD of Zhejiang University. I am Interested in Machine Learning，and my dream is the strong AI"
  shanghai_topic:
    title: "基于OwlReady2的人机交互"
    title_en: "Human–Machine Interaction based on OwlReady2"
    preview: "OWL是用于本体论知识管理的描述语言，而OwlReady2是它的Python接口，OwlReady2封装了推理引擎HermiT和Pellet, 可以进行基于描述逻辑 (DLs) 的推理。利用Python的动态编程功能，实现具有推理能力的人机对话系统。为使用自然语言，还建立了一个文法解析模块。系统可以通过简单对话任务的测试。"
    preview_en: "OWL is a description language for the management of ontological knowledge, and OwlReady2 is its Python interface, that encapsulates the reasoning engine HermiT and Pellet, and can make reasoning based on description logics (DLs). Utilizing Python's dynamic programming, the human-machine dialogue system with reasoning ability based on OwlReady2 is realized. In order to use natural language, a grammar parsing module is built. The system can pass the testing of simple dialogue task."
    slide: #
####################################################################
# 北京
####################################################################
speaker_beijing_jintaozhang:
  name: 张晋涛
  name_en: Jintao Zhang
  city_beijing: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "网易有道资深运维开发"
  short_intro_en: "Senior Operations and Maintenance Developer of NetEase Inc."
  intro: "负责容器化及平台化开发，Kubernetes 从上手到实践作者"
  intro_en: "Responsible for the development of container and platform. He is the author of the book: Kubernets: from getting started to practicing."
  shanghai_topic:
    title: "云原生时代下 Python 开发的新体验"
    title_en: "A new experience of Python development in the Cloud Native"
    preview: "Kubernetes 已经成为容器编排领域的事实标准，各公司及团队都在开始使用或逐步探索如何将其用于生产环境中。而多数情况下 我们希望能通过 Kubernetes 提高团队整体的研发效率以及提高服务部署及扩缩容的效率，serverless 并不是一个很新的概念，但在云原生时代下，我们有了更多可能性和更多玩法，希望能与大家分享云原生时代下 Python 开发结合 serverless 的体验，以及在此过程中的探索和实践。"
    preview_en: "Kubernetes has become the de facto standard in the field of container orchestration, and companies and teams are beginning to use or gradually explore how to use them in production environments. In most cases, we hope to improve the overall R&D efficiency of the team and improve the efficiency of service deployment and expansion and expansion through Kubernetes. Serverless is not a very new concept, but in the cloud era, we have more possibilities and More gameplay, I hope to share with you the experience of Python development combined with serverless in the Cloud Native, as well as exploration and practice in this process."
    slide: #
speaker_beijing_lianghongfei:
  name: 费良宏
  name_en: Lianghong Fei
  city_beijing: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Amazon Web Services"
  short_intro_en: "Amazon Web Services"
  intro: "作为Principal Evangelist 任职于AWS,主要专注于云计算以及互联网等技术领域。其拥有超过20年在IT行业以及软件开发领域的工作经验；曾经任职于Microsoft、Apple 等知名企业，任职架构师、技术顾问等职务，参与过多个大型软件项目的设计、开发与项目管理；并于2009年开始，从事与云计算领域相关的技术工作；研究方向主要是软件架构的演进，尤其是云计算方面的架构实践，并擅长Web应用、移动应用以及机器学习等的开发。"
  intro_en: "Lianghong Fei is a Principal Evangelist at Amazon Web Services, where he leverages his 20+ years of experience to support innovation and to help startups and companies bring their ideas to live by the power of Cloud. He focuses on software development and cloud native architectures as well as the technical and business impact of Machine Learning and data analytics. Prior to joining AWS, he worked at Apple and Microsoft."
  shanghai_topic:
    title: "在30分钟内迁移PythonWeb应用到无服务器"
    title_en: "Migrating your Python Web app to Serverlessin 30 minutes"
    preview: "这个话题将探讨Flask应用程序迁移到AWS Lambda的过程。我们将分析现有的应用程序，将其分解为单独的微服务，调整身份验证、前端、测试和数据模型，最后将其部署到云中。通过这个分享，您将了解无服务器的优点，以及它将如何改变对可伸缩性、可用性、安全性、基础设施管理和成本优化的看法。"
    preview_en: "This session will talk about the process of migrating an existing Flask application to AWS Lambda.W e will analyze the existing application, decompose it into individual microservices, adapt authentication, frontend, tests, and data model, and finally deploy it to the Cloud.Throughout this step-by-step process, you will learn the benefits of serverless and how it will change the way you think of scalability, availability, security, infrastructure management, and cost optimization."
    slide: #
####################################################################
# 杭州
####################################################################

####################################################################
# 深圳
####################################################################
speaker_shenzhen_zagfai:
  name: 邝泽徽
  name_en: Zagfai
  city_shenzhen: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Touchcall - 程序员"
  short_intro_en: "Programmer of Touchall"
  intro: "八年Python使用经验，十五年编程经验，曾任职于猎豹移动，给猎豹备份大师、Whatscall等项目的服务端写过第1个commit，构建起使用Python支撑过亿用户的系统。算法爱好者，自动化爱好者。"
  intro_en: "Eight years of Python's experience, 15 years of programming experience, Zagfai has worked for Cheetah Mobile, wroted the first commit for the server side of cheetah backup masters, Whatscall and other projects, built a Python system that support hundreds of millions of users. He is an algorithm lover and an automation enthusiast."
  shanghai_topic:
    title: "从Python开始钱赚钱"
    title_en: ""
    preview: "理财是全民性的话题，有保守的余额宝、稳健的股票期货、激进的虚拟币和百倍杠杆炒外汇。题主在经历过各种理财方法之后，决定分享在激进投资项目里用Python做较低风险的投资方法：量化交易之网格交易虚拟币。本主题从零开始，简单讨论网格交易的原理及方法，讲述如何通过Python调用相关交易所API接口、获取投资标的信息、记录交易、测试和正确运行程序的历程，给听众对量化交易一个基本的概念，从用程序去赚钱引申出编程可以很有趣的观点。"
    preview_en: ""
    slide: #
speaker_shenzhen_chaoxie:
  name: 解超
  name_en: Chao Xie
  city_shenzhen: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "Gekko Lab - 数据工程师"
  short_intro_en: "Data Engineer of Gekko Lab"
  intro: "负责Gekko Lab数据开发，数据采集，数据分析，数据集合"
  intro_en: "Responsible for data developmenting, acquisiting,  analysising, and collection in Gekko Lab."
  shanghai_topic:
    title: "一行代码加速科学计算"
    title_en: "Boost the scientific computing with one line of code"
    preview: "一行代码，加速科学计算框架pandas.<ul>
              <li>modin是什么？modin与pandas的区别? 怎么用modin?</li>
              <li>modin vs pandas 速度比较？</li>
              <li>modin底层实现原理，如何做到充分利用计算机多核并行科学计算？</li>
              <li>modin的局限， modin社区展望。</li></ul>"
    preview_en: "一行代码，加速科学计算框架pandas.<ul>
              <li>What is modin? What's the difference between modin and pandas? How to start using modin?</li>
              <li>Speed: modin V.S. pandas</li>
              <li>Low-level principles: how to make full use the power of multi-core to parallel the scientific computing?</li>
              <li>The limitation and community's ambition of modin</li></ul>"
    slide: #
speaker_shenzhen_fengzhao:
  name: 赵丰
  name_en: Feng Zhao
  city_shenzhen: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "清华大学深圳研究生院 - 博士生"
  short_intro_en: "PhD student of Shenzhen Graduate School of Tsinghua University"
  intro: "从事机器学习相关领域研究"
  intro_en: "Engaged research related to machine learning"
  shanghai_topic:
    title: "Python C 拓展在各平台的打包与发布"
    title_en: "Pack and release Python C extensions in various plateforms"
    preview: "<ul>
              <li>介绍 Python package 发布流程，C拓展， fortran拓展和C++</li>
              <li>拓展打包在不同操作系统上如何编译wheel, 面向 linux 操作系统如何编译 manylinux 的二进制包，windows平台如何解决依赖问题，如何结合持续集成工具发布到pypi.org。</li></ul>"
    preview_en: "<ul>
              <li>How to build a Python package, how to make Python extension with C, C++, and Fortran</li>
              <li>How to make wheel package in various plateforms, how to build binary packages target to manylinux, how to solve the dependency on windows, how to release the package to pypi.org with the help of CI</li></ul>"
    slide: #
####################################################################
# 成都
####################################################################
speaker_chengdu_zhihangliu:
  name: 刘知杭
  name_en: Zhihang Liu
  city_chengdu: 1
  avatar: ./asset/images/speakers/lecturer_changhui.png
  avatar_en: ../asset/images/speakers/lecturer_changhui.png
  short_intro: "广州天验网络科技有限公司 反逆向引擎组组长"
  short_intro_en: ""
  intro: "独立完成了Malt语言的开发。研究方向为PLT（编程语言理论）方向。"
  intro_en: "Designed the Malt language in person.His research direction is Programming Language Theory (PLT)."
  shanghai_topic:
    title: "静态类型的Python"
    title_en: "The Static Typed Python"
    preview: "不同于从实践的角度来安利静态类型标注，本次演讲将从学术界的角度讲述Python类型化的必要性，静态类型语言相较于等价动态语言的区别的本质是什么，以及如何利用现代PLT中的全局类型推导（Global Type Inference）技术，在不失灵活性的前提下，给Python加上静态类型系统。"
    preview_en: "From the perspective of academia, this talk will show the necessity of the static-typed Python, what is the essence of the difference of the static- and dynamic-typed language, and how to add static-typed sysyem into Python with the help of Global Type Inference while remaining Python's flaxibility."
    slide: #